{"version":3,"sources":["webpack:///./index.js"],"names":["timer","selector","targetDate","this","refs","strtNode","document","querySelector","stpNode","timerId","handleTimer","time","Date","now","setInterval","days","Math","floor","hours","mins","secs","textContent","stopTimer","clearInterval","undefined","addEventListener","bind"],"mappings":"kHAAA,qBAwCMA,EAAQ,I,WAtCZ,cAAsC,IAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,KAAO,CACVC,SAAUC,SAASC,cAAc,wBACjCC,QAASF,SAASC,cAAc,uBAChCP,MAAOM,SAASC,cAAcN,IAEhCE,KAAKM,QAAU,K,2BAGjBC,YAAA,WAAc,WACZ,IAAIP,KAAKM,QAAT,CAGA,IAAIE,EAAOC,KAAKC,IAAIV,KAAKD,YAEzBC,KAAKM,QAAUK,aAAY,WACzBH,GAAQ,IACR,IAAMI,EAAOC,KAAKC,MAAMN,EAAO,OACzBO,EAAQF,KAAKC,MAChBN,EAAO,MAAR,MAEIQ,EAAOH,KAAKC,MAAON,EAAO,KAAR,KAClBS,EAAOJ,KAAKC,MAAON,EAAO,IAAe,KAC/C,EAAKP,KAAKJ,MAAMO,cAAc,uBAAuBc,YAAcN,EACnE,EAAKX,KAAKJ,MAAMO,cAAc,wBAAwBc,YAAcH,EACpE,EAAKd,KAAKJ,MAAMO,cAAc,uBAAuBc,YAAcF,EACnE,EAAKf,KAAKJ,MAAMO,cAAc,uBAAuBc,YAAcD,IAClE,O,EAGLE,UAAA,WACEC,cAAcd,SACdA,aAAUe,G,KAIA,CAAmB,CAC/BvB,SAAU,WACVC,WAAY,IAAIU,KAAK,kBAGvBZ,EAAMU,cAENL,SAASoB,iBAAiB,QAASzB,EAAMU,YAAYgB,KAAK1B,IAE1DQ,QAAQiB,iBAAiB,QAASzB,EAAMsB,UAAUI,KAAK1B,M","file":"main.bfd6139f776a81c7bf49.js","sourcesContent":["import './styles.css';\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    this.refs = {\r\n      strtNode: document.querySelector('[data-value=\"start\"]'),\r\n      stpNode: document.querySelector('[data-value=\"stop\"]'),\r\n      timer: document.querySelector(selector),\r\n    };\r\n    this.timerId = null;\r\n  }\r\n\r\n  handleTimer() {\r\n    if (this.timerId) {\r\n      return;\r\n    }\r\n    let time = Date.now(this.targetDate);\r\n\r\n    this.timerId = setInterval(() => {\r\n      time -= 1000;\r\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n      );\r\n      const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n      const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n      this.refs.timer.querySelector('[data-value=\"days\"]').textContent = days;\r\n      this.refs.timer.querySelector('[data-value=\"hours\"]').textContent = hours;\r\n      this.refs.timer.querySelector('[data-value=\"mins\"]').textContent = mins;\r\n      this.refs.timer.querySelector('[data-value=\"secs\"]').textContent = secs;\r\n    }, 1000);\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(timerId);\r\n    timerId = undefined;\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2019'),\r\n});\r\n\r\ntimer.handleTimer();\r\n\r\nstrtNode.addEventListener('click', timer.handleTimer.bind(timer));\r\n\r\nstpNode.addEventListener('click', timer.stopTimer.bind(timer));\r\n"],"sourceRoot":""}